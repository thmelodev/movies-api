generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        String   @id @db.Uuid
  name      String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  movies MovieCategory[]

  @@map("categories")
}

model Language {
  id        String   @id
  name      String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  movies Movie[]

  @@map("languages")
}

model Movie {
  id              String      @id @db.Uuid
  title           String
  originalTitle   String      @unique @map("original_title")
  synopsis        String
  ageRating       Int         @map("age_rating")
  releaseDate     DateTime    @map("release_date") @db.Date
  durationMinutes Int         @map("duration_minutes")
  status          MovieStatus
  budget          Float
  revenue         Float
  imageUrl        String      @map("image_url")
  negativeVotesCount       Int         @map("negative_votes_count")
  positiveVotesCount   Int         @map("positive_votes_count")
  languageId      String      @map("language_id")
  createdAt       DateTime    @default(now()) @map("created_at")
  updatedAt       DateTime    @updatedAt @map("updated_at")

  language Language @relation(fields: [languageId], references: [id])
  categories MovieCategory[] 

  @@map("movies")
}

model MovieCategory {
  movieId    String @map("movie_id") @db.Uuid
  categoryId String @map("category_id") @db.Uuid

  movie    Movie    @relation(fields: [movieId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])

  @@id([movieId, categoryId])
  @@map("movies_categories")
}

enum MovieStatus {
  RELEASED  @map("released")
  UPCOMING  @map("upcoming")
  CANCELLED @map("cancelled")

  @@map("movie_status")
}
